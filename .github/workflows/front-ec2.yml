name: Deploy to AWS EC2 for Dev

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - closed
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy_to_ec2:
    runs-on: ubuntu-latest

    steps:
      # 리포지토리 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v2

      # Debug 환경 변수
      - name: Debug environment variables
        run: |
          echo "REACT_APP_URI=${{ secrets.REACT_APP_URI }}"
          echo "REACT_APP_SPRING_URI=${{ secrets.REACT_APP_SPRING_URI }}"

      # 시크릿 유효성 검사
      - name: Validate secrets
        run: |
          if [ -z "${{ secrets.REACT_APP_URI }}" ]; then
            echo "Error: REACT_APP_URI is missing" && exit 1
          fi
          if [ -z "${{ secrets.REACT_APP_SPRING_URI }}" ]; then
            echo "Error: REACT_APP_SPRING_URI is missing" && exit 1
          fi

      # Docker Hub 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Docker 이미지 빌드 및 푸시
      - name: Build and push Docker image to Docker Hub
        run: |
          docker build -f dockerfile.ec2 --build-arg REACT_APP_URI=${{ secrets.REACT_APP_URI }} \
                                         --build-arg REACT_APP_SPRING_URI=${{ secrets.REACT_APP_SPRING_URI }} \
                                         --build-arg REACT_APP_KAKAO_CLIENT_ID=${{ secrets.REACT_APP_KAKAO_CLIENT_ID }} \
                                         --build-arg REACT_APP_KAKAO_AUTH_CODE_PATH=${{ secrets.REACT_APP_KAKAO_AUTH_CODE_PATH }} \
                                         --build-arg REACT_APP_KAKAO_REDIRECT_URI=${{ secrets.REACT_APP_KAKAO_REDIRECT_URI }} \
                                         --build-arg REACT_APP_GOOGLE_CLIENT_ID=${{ secrets.REACT_APP_GOOGLE_CLIENT_ID }} \
                                         --build-arg REACT_APP_GOOGLE_AUTH_CODE_PATH=${{ secrets.REACT_APP_GOOGLE_AUTH_CODE_PATH }} \
                                         --build-arg REACT_APP_GOOGLE_REDIRECT_URI=${{ secrets.REACT_APP_GOOGLE_REDIRECT_URI }} \
                                         --build-arg REACT_APP_GITHUB_CLIENT_ID=${{ secrets.REACT_APP_GITHUB_CLIENT_ID }} \
                                         --build-arg REACT_APP_GITHUB_AUTH_CODE_PATH=${{ secrets.REACT_APP_GITHUB_AUTH_CODE_PATH }} \
                                         -t narrativa_front:latest .
          docker tag narrativa_front:latest ${{ secrets.DOCKER_USERNAME }}/narrativa_front:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/narrativa_front:latest

      # SSH 키 설정
      - name: Set up SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2_key.pem
          chmod 400 ec2_key.pem

      # Docker 컨테이너를 EC2에 배포
      - name: Deploy Docker container to EC2
        env:
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          set +x

          # 기존 컨테이너 강제 중지 및 제거 (강제 제거)
          ssh -i "ec2_key.pem" -o "StrictHostKeyChecking=no" $USER@$HOST "
            container_id=\$(docker ps -aq --filter 'name=narrativa_front')
            if [ -n \"\$container_id\" ]; then
              docker stop \$container_id || true
              docker rm -f \$container_id || true
            fi
          "

          # Docker Hub에서 최신 이미지 가져오기
          ssh -i "ec2_key.pem" -o "StrictHostKeyChecking=no" $USER@$HOST "docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}"
          ssh -i "ec2_key.pem" -o "StrictHostKeyChecking=no" $USER@$HOST "docker pull ${{ secrets.DOCKER_USERNAME }}/narrativa_front:latest"

          # 기존 이미지 삭제 (덧붙여서 필요시 수행)
          ssh -i "ec2_key.pem" -o "StrictHostKeyChecking=no" $USER@$HOST "docker images --filter 'dangling=true' -q | xargs -r docker rmi || true"

          # 새 컨테이너 실행
          ssh -i "ec2_key.pem" -o "StrictHostKeyChecking=no" $USER@$HOST "docker run -d -p 3010:3010 --name narrativa_front \
            -e REACT_APP_URI=${{ secrets.REACT_APP_URI }} \
            -e REACT_APP_SPRING_URI=${{ secrets.REACT_APP_SPRING_URI }} \
            -e REACT_APP_KAKAO_CLIENT_ID=${{ secrets.REACT_APP_KAKAO_CLIENT_ID }} \
            -e REACT_APP_KAKAO_AUTH_CODE_PATH=${{ secrets.REACT_APP_KAKAO_AUTH_CODE_PATH }} \
            -e REACT_APP_KAKAO_REDIRECT_URI=${{ secrets.REACT_APP_KAKAO_REDIRECT_URI }} \
            -e REACT_APP_GOOGLE_CLIENT_ID=${{ secrets.REACT_APP_GOOGLE_CLIENT_ID }} \
            -e REACT_APP_GOOGLE_AUTH_CODE_PATH=${{ secrets.REACT_APP_GOOGLE_AUTH_CODE_PATH }} \
            -e REACT_APP_GOOGLE_REDIRECT_URI=${{ secrets.REACT_APP_GOOGLE_REDIRECT_URI }} \
            -e REACT_APP_GITHUB_CLIENT_ID=${{ secrets.REACT_APP_GITHUB_CLIENT_ID }} \
            -e REACT_APP_GITHUB_AUTH_CODE_PATH=${{ secrets.REACT_APP_GITHUB_AUTH_CODE_PATH }} \
            ${{ secrets.DOCKER_USERNAME }}/narrativa_front:latest"
