# 1. 빌드 단계
FROM node:18 AS build

WORKDIR /app

# package.json과 package-lock.json 복사 및 의존성 설치
COPY package.json package-lock.json ./ 
RUN npm install

# Docker build에서 환경 변수를 받을 수 있도록 ARG 추가
ARG REACT_APP_KAKAO_CLIENT_ID
ARG REACT_APP_KAKAO_AUTH_CODE_PATH
ARG REACT_APP_KAKAO_REDIRECT_URI
ARG REACT_APP_GOOGLE_CLIENT_ID
ARG REACT_APP_GOOGLE_AUTH_CODE_PATH
ARG REACT_APP_GOOGLE_REDIRECT_URI
ARG REACT_APP_GITHUB_CLIENT_ID
ARG REACT_APP_GITHUB_AUTH_CODE_PATH
ARG REACT_APP_URI
ARG REACT_APP_SPRING_URI
ARG REACT_APP_FIREBASE_API_KEY
ARG REACT_APP_FIREBASE_AUTH_DOMAIN
ARG REACT_APP_FIREBASE_PROJECT_ID
ARG REACT_APP_FIREBASE_STORAGE_BUCKET
ARG REACT_APP_FIREBASE_MESSAGING_SENDER_ID
ARG REACT_APP_FIREBASE_APP_ID
ARG REACT_APP_FIREBASE_MEASUREMENT_ID

# ARG 값을 ENV로 설정하여 런타임에 사용
ENV REACT_APP_KAKAO_CLIENT_ID=$REACT_APP_KAKAO_CLIENT_ID
ENV REACT_APP_KAKAO_AUTH_CODE_PATH=$REACT_APP_KAKAO_AUTH_CODE_PATH
ENV REACT_APP_KAKAO_REDIRECT_URI_PART=$REACT_APP_KAKAO_REDIRECT_URI
ENV REACT_APP_GOOGLE_CLIENT_ID=$REACT_APP_GOOGLE_CLIENT_ID
ENV REACT_APP_GOOGLE_AUTH_CODE_PATH=$REACT_APP_GOOGLE_AUTH_CODE_PATH
ENV REACT_APP_GOOGLE_REDIRECT_URI_PART=$REACT_APP_GOOGLE_REDIRECT_URI
ENV REACT_APP_GITHUB_CLIENT_ID=$REACT_APP_GITHUB_CLIENT_ID
ENV REACT_APP_GITHUB_AUTH_CODE_PATH=$REACT_APP_GITHUB_AUTH_CODE_PATH
ENV REACT_APP_URI=$REACT_APP_URI
ENV REACT_APP_SPRING_URI=$REACT_APP_SPRING_URI
ENV REACT_APP_FIREBASE_API_KEY=$REACT_APP_FIREBASE_API_KEY
ENV REACT_APP_FIREBASE_AUTH_DOMAIN=$REACT_APP_FIREBASE_AUTH_DOMAIN
ENV REACT_APP_FIREBASE_PROJECT_ID=$REACT_APP_FIREBASE_PROJECT_ID
ENV REACT_APP_FIREBASE_STORAGE_BUCKET=$REACT_APP_FIREBASE_STORAGE_BUCKET
ENV REACT_APP_FIREBASE_MESSAGING_SENDER_ID=$REACT_APP_FIREBASE_MESSAGING_SENDER_ID
ENV REACT_APP_FIREBASE_APP_ID=$REACT_APP_FIREBASE_APP_ID
ENV REACT_APP_FIREBASE_MEASUREMENT_ID=$REACT_APP_FIREBASE_MEASUREMENT_ID

# 앱 소스 코드 복사 및 빌드
COPY . . 
RUN npm run build

# 2. 배포 단계
FROM node:18-alpine

# `serve` 설치 (정적 파일을 서빙하기 위한 라이브러리)
RUN npm install -g serve && npm cache clean --force

# 빌드된 파일 복사
COPY --from=build /app/build /app/build

# 포트 3010 노출
EXPOSE 3010

# `serve`로 정적 파일 서빙
CMD ["serve", "-s", "/app/build", "-l", "3010"]
